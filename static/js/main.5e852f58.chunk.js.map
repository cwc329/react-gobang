{"version":3,"sources":["components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["BoardLayer1","styled","div","BoardLayer2","BoardLayer3","KiSquares","props","kiColor","LineSquare","setting","i","push","j","Board","ki","handlers","useState","boardSetting","map","row","square","data-x","x","data-y","y","onClick","placeKi","AppWrappre","PlayingKi","status","counter","App","console","log","setKi","playing","order","winner","records","gameStatus","setGameStatus","e","Number","target","attributes","value","color","whoWin","startPoint","dx","dy","line","startX","startY","kies","undefined","currentX","currentY","useEffect","length","alert","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e852f58.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { useState } from 'react';\n\nconst BoardLayer1 = styled.div`\n  width: 780px;\n  height: 780px;\n  position: relative;\n  background: #965a35;\n  margin: 0 auto;\n  border: 2px solid black;\n`;\n\nconst BoardLayer2 = styled.div`\n  width: 760px;\n  height: 760px;\n  margin: 0 auto;\n  position: absolute;\n  left: 10px;\n  top 10px;\n`;\n\nconst BoardLayer3 = styled.div`\n  width: 720px;\n  height: 720px;\n  margin: 0 auto;\n  position: absolute;\n  border: 0.5px solid black;\n  left: 30px;\n  top 30px;\n`;\n\nconst KiSquares = styled.div`\n  width: 30px;\n  height: 30px;\n  margin: 5px;\n  display: inline-block;\n  box-sizing: border-box;\n  border-radius: 50%;\n  background: ${props => props.kiColor};\n  cursor: pointer;\n`\n\nconst LineSquare = styled.div`\n  width: 40px;\n  height: 40px;\n  display: inline-block;\n  box-sizing: border-box;\n  border: 2px solid black;\n`\n\nconst setting = []\nfor (let i = 0; i < 18; i++) {\n  setting.push([]);\n  for (let j = 0; j < 18; j++) {\n    setting[i].push([j, i]);\n  }\n}\nfunction Board({ ki, handlers }) {\n  const [boardSetting] = useState(setting);\n  return(\n  <div>\n    <BoardLayer1>\n      <BoardLayer3>\n        {\n          boardSetting.map( row => {\n            return  row.map( square => {\n              return <LineSquare key={square[0] * 100 + square[1]}>&nbsp;</LineSquare>\n            })\n          })\n        }\n      </BoardLayer3>\n      <BoardLayer2>\n        {\n          ki.map(row => {\n            return (\n              row.map(square => {\n                return (\n                  <KiSquares\n                    key={square.x * 100 + square.y}\n                    kiColor={square.kiColor}\n                    data-x={square.x}\n                    data-y={square.y}\n                    onClick={handlers.placeKi}\n                  >\n                    &nbsp;\n                  </KiSquares>\n                )\n              })\n            )\n          })\n        }\n      </BoardLayer2>\n    </BoardLayer1>\n  </div>\n  )\n}\n\nexport { Board, KiSquares }","import './App.css';\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Board, KiSquares } from './components/Board';\n\nconst AppWrappre = styled.div`\n  max-width: 1920px;\n`\n\nconst PlayingKi = styled(KiSquares)`\n  border: 1px solid black;\n  margin: 0;\n`\n\nconst status = [];\n\nfor (let y = 0; y < 19; y++) {\n  status[y] = [];\n  for (let x = 0; x < 19; x++) {\n    status[y][x] = {\n      x,\n      y,\n      kiColor: '',\n      counter: 1\n    }\n  }\n}\n\nfunction App() {\n  console.log('render');\n  const [ki, setKi] = useState(status);\n  const [gameStatus, setGameStatus] = useState(\n    {\n      playing: 'black',\n      order: 1,\n      winner: '',\n      records: []\n    }\n  );\n\n  const handlers = {\n    placeKi: e => {\n      const x = Number(e.target.attributes['data-x'].value);\n      const y = Number(e.target.attributes['data-y'].value);\n      if (gameStatus.winner || ki[y][x].kiColor) return\n      setKi(ki.map(row => {\n        return row.map(square => {\n          return ((square.x === x) && (square.y === y))\n            ? {...square, kiColor: gameStatus.playing}\n            : square\n        });\n      }))\n      setGameStatus({\n        ...gameStatus,\n        playing: gameStatus.playing === 'black' ? 'white' : 'black',\n        order: gameStatus.order + 1,\n        records: [...gameStatus.records, {order: gameStatus.order, x, y, color:gameStatus.playing}]\n      });\n    },\n\n    whoWin: (x, y) => {\n      const color = ki[y][x].kiColor;\n      const lines = [\n        {\n          startPoint: {x: x, y: y - 4},\n          dx: 0,\n          dy: 1\n        },\n        {\n          startPoint: {x: x - 4, y: y},\n          dx: 1,\n          dy: 0\n        },\n        {\n          startPoint: {x: x - 4, y: y - 4},\n          dx: 1,\n          dy: 1\n        },\n        {\n          startPoint: {x: x - 4, y: y + 4},\n          dx: 1, \n          dy: -1\n        }\n      ]\n      for (const line of lines) {\n        let startX = line.startPoint.x;\n        let startY = line.startPoint.y;\n        \n        let kies = 0;\n        for (let i = 0; i < 5; i++) {\n          if (ki[startY] === undefined || ki[startY][startX] === undefined || ki[startY][startX].kiColor !== color) {\n            kies = 0;\n            startX += line.dx;\n            startY += line.dy;\n            continue;\n          };\n          kies = 1;\n          //console.log({startX, startY})\n          let currentX = startX + line.dx;\n          let currentY = startY + line.dy;\n          for (let j = 0; j < 4; j++) {\n            //console.log({currentX, currentY});\n            if (ki[currentY] === undefined || ki[currentY][currentX] === undefined || ki[currentY][currentX].kiColor !== color) {\n              kies = 0;\n              continue;\n            };\n            kies += 1;\n            currentX += line.dx;\n            currentY += line.dy;\n            //console.log({kies})\n            //console.log('lll',{color})\n            if (kies === 5) {\n              return setGameStatus(\n                {\n                  ...gameStatus,\n                  winner: color\n                }\n              )\n            };\n          }\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    const { records } = gameStatus;\n    if (records.length === 19 * 19) {\n      setGameStatus(\n        {\n          ...gameStatus,\n          winner: 'draw'\n        }\n      )\n    }else if (records.length !== 0) {\n      console.log('deciding');\n      const { x, y } = records[records.length - 1];\n      console.log({x,y})\n      handlers.whoWin(x, y);\n    }\n    console.log('useEffect', gameStatus);\n  }, [ki])\n\n  useEffect(() => {\n    if (gameStatus.winner) \n      {\n        alert(gameStatus.winner === 'black' ? '黑子勝' : gameStatus.winner === 'white' ? '白子勝' : '平手')\n      }\n  }, [gameStatus.winner])\n\n  return (\n    <AppWrappre className=\"App\">\n      <h1>小遊戲-五子棋</h1>\n      <h3>Now Playing: <span><PlayingKi kiColor={gameStatus.playing}/></span></h3>\n      <Board ki={ki} handlers={handlers}/>\n    </AppWrappre>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}